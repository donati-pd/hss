% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pae.R
\name{pae}
\alias{pae}
\alias{pae_simple}
\alias{pae_mand}
\alias{pae_vol}
\title{Simulate populations and calculate estimates.}
\usage{
pae_mand(n, split = 1, success1, success0 = success1, resp, times)

pae_simple(
  n,
  split = 1,
  success1,
  success0 = success1,
  sample,
  resp,
  resp_bias,
  fus = FALSE,
  fus_scale = NULL,
  poststrat = FALSE,
  times
)

pae_vol(
  n,
  split = 1,
  success1,
  success0 = success1,
  resp,
  resp_bias,
  fus = FALSE,
  fus_sample = NULL,
  fus_scale = NULL,
  poststrat = FALSE,
  times
)
}
\arguments{
\item{n}{The desired population size.}

\item{split}{Proportion of the population that is placed into group 1.
The remaining proportion (i.e. \code{1 - split}) will be in group 0.}

\item{success1}{Probability of a hunter in group 1 to harvest}

\item{success0}{Probability of a hunter in group 0 to harvest}

\item{resp}{Probability/probabilities of response. Can be a vector with
length > 1.
\itemize{
\item In \code{pae_simple()} and \code{pae_vol()} it defines response
probabilities for unsuccessful hunters.
\item In \code{pae_mand()} it defines
response probabilities for successful hunters, as they are the only ones
mandated to report.
}}

\item{times}{Defines the number of times to repeat the simulation for each
element of \code{resp_bias}.}

\item{sample}{Probability a hunter is sampled for a survey}

\item{resp_bias}{Scales \code{resp} to create probabilities of response
for successful hunters. Introduces response bias between successful and
unsuccessful hunters if not equal to 1. Can be a vector with length > 1.}

\item{fus}{Logical. If TRUE, a single follow up survey will be simulated.}

\item{fus_scale}{Scales initial response probabilities,
creating new probabilities of response for follow up surveys.}

\item{poststrat}{Logical. If \code{TRUE}, post-stratify respondents by the
\code{group} variable. If a follow up survey is simulated, it will also be
post-stratified.}

\item{fus_sample}{Probability that a non-respondent is sampled for a follow
up survey.}
}
\value{
A tibble, containing an estimate of harvest for each level of
response rate, standard error, and absolute percent error, among
other important metadata.\cr\cr
See "Details" section for explanation of output and more information.
}
\description{
The \code{pae} functions simulate \strong{p}opulations \strong{a}nd
\strong{e}stimate total harvest all in one step. They are
wrappers around their respective \code{\link{pop}} and \code{\link{est}}
functions. These functions are useful for simulating multiple populations
at once.
\itemize{
\item \code{pae_mand()} simulates populations, mandates successful hunters
to report their harvest, and creates harvest estimates from responses.
\item \code{pae_simple()} simulates populations, surveys them using
simple random sampling, and creates harvest estimates from responses.
\item \code{pae_vol()} simulates populations, allows both successful and
unsuccessful hunters to voluntarily report, and creates harvest estimates
from responses.
}
}
\details{
These functions provide an easy way to replicate multiple simulations within
a single function. Be aware that depending on how you define arguments, these
functions may take a long time to execute. Large populations, long vectors
for \code{resp} and \code{resp_bias}, and simulating many
iterations using \code{times} can all take a while
to execute.\cr\cr
These functions differ slightly from the \code{est} functions in that you
can define and simulate multiple levels of response bias at once. On top of
that, the \code{times} argument will repeat each level of response bias by
the \code{times} specified. For example, say you define
\code{resp = c(0.4, 0.6)}, \code{resp_bias = c(1, 1.1, 1.2)}, and
\code{times = 100}. Each element in \code{resp_bias} will be simulated 100
\code{times} (i.e. 300 simulations total), but each of those 300 simulations
also must simulate the 2 levels of \code{resp} that you defined,
so you end up with an output of data that contains 600 different simulations
and harvest estimates. Each unique element of \code{resp} is simulated
from the same populations, but once \code{times} triggers a new iteration,
it also simulates a new population.
}
\examples{
# Calculate harvest estimates from a population that was surveyed using a
# simple random sample. Simulate multiple response biases and repeat each
# of them 100 times:
dat <- pae_simple(
  n         = 1000,
  split     = 0.7,
  success1  = 0.25,
  success0  = 0.6,
  sample    = 0.5,
  resp      = seq(0.2, 0.8, 0.2),
  resp_bias = c(1, 1.1, 1.2),
  fus       = TRUE,
  fus_scale = 0.7,
  poststrat = FALSE,
  times     = 100
)





}
\seealso{
\code{\link{pop}} and \code{\link{est}} to better understand the functions
that these are wrappers for.
}
